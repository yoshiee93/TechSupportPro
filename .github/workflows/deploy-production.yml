name: Deploy to Production

on:
  push:
    branches: [main]

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Create Database Backup
      env:
        DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }}
      run: |
        npm install
        node scripts/backup-db.js
    
    - name: Upload Backup
      uses: actions/upload-artifact@v4
      with:
        name: database-backup
        path: backups/

  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run type check
      run: npm run check
    
    - name: Set up test database
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      run: |
        npm run db:generate
        npm run db:migrate
    
    - name: Build application
      run: npm run build

  deploy:
    needs: [backup, test]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Deploy to Production Server
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }}
      run: |
        echo "Deploying to production server"
        # Add production deployment commands here
    
    - name: Run Database Migrations
      env:
        DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }}
      run: |
        npm run db:migrate
    
    - name: Health Check
      run: |
        echo "Performing health check"
        # Add health check commands here